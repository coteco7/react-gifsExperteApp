{"version":3,"sources":["componentes/AddCategoria.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","valorInput","setvalorInput","onSubmit","e","preventDefault","trim","length","categorias","value","type","onChange","target","obtenerGif","categoriasArreglo","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","imagenes","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAuB9C,OAEQ,sBAAMC,SAjBK,SAACC,GAChBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,MAYd,SACI,uBACIO,MAAQR,EACRS,KAAK,OACLC,SAzBG,SAAEP,GACfF,EAAeE,EAAEQ,OAAOH,a,+BCTrBI,EAAU,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEhBC,EAFgB,iDAEiCC,UAAUH,GAF3C,+DAGEI,MAAMF,GAHR,cAGhBG,EAHgB,gBAIDA,EAAUC,OAJT,uBAIfC,EAJe,EAIfA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVpB,kBAcfM,GAde,4CAAH,sDCEVO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OADAc,QAAQC,IAAKN,EAAIC,EAAOV,GAEpB,sBAAKgB,UAAU,2DAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAMA,EAAN,WCFCS,EAAU,SAAC,GAA2B,IAAzBrB,EAAwB,EAAxBA,kBAAwB,ECHtB,SAAEA,GAAwB,IAAD,EAEvBd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJoC,mBAE1CC,EAF0C,KAEnCC,EAFmC,KA4BjD,OApBAC,qBAAU,WACN1B,EAAYC,GACX0B,MAAK,SAAAC,GAEFC,YAAW,WAEPZ,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEd,UAMR,CAAEtB,IAGEuB,EDtB4BM,CAAa7B,GAAnC8B,EAHiC,EAGtCvB,KAAee,EAHuB,EAGvBA,QAGvB,OACI,qCACI,oBAAIJ,UAAU,sDAAd,SAAsElB,IAEpEsB,GAAW,8CAGT,qBAAKJ,UAAU,WAAf,SAIYY,EAASrB,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEoBhCoB,EAvCM,WAAK,MAGc7C,mBAAS,CAAC,KAHxB,mBAGfQ,EAHe,KAGHT,EAHG,KAUtB,OACI,qCACI,8CACA,cAAC,EAAD,CAAcA,cAAgBA,IAC9B,uBAIA,6BAEQS,EAAWe,KAAK,SAAAT,GAEb,OAAQ,cAAC,EAAD,CAEKA,kBAAqBA,GADdA,Y,MCvB3CgC,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1bae38c5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategoria = ({ setCategorias }) =>{\r\n\r\n    const [valorInput, setvalorInput] = useState('');\r\n\r\n    const inputValor = ( e ) => {   // funcion para poder tomar el valor que se ingresa al input\r\n          setvalorInput( e.target.value );\r\n    }\r\n\r\n    const pressEnter = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (valorInput.trim().length > 2) {\r\n            setCategorias(categorias => [ valorInput, ...categorias  ] );\r\n            setvalorInput('');\r\n\r\n        }\r\n\r\n        \r\n\r\n        // console.log('Enter presionado');\r\n\r\n    }\r\n\r\n    return(\r\n            \r\n            <form onSubmit= { pressEnter }>\r\n                <input \r\n                    value={ valorInput } \r\n                    type=\"text\" \r\n                    onChange={ inputValor } \r\n                />\r\n            </form>\r\n            \r\n        \r\n    )\r\n}\r\n\r\n\r\nAddCategoria.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired // funcion requerida setCategorias \r\n}\r\n\r\n\r\n","export const obtenerGif = async( categoriasArreglo ) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoriasArreglo)  }&limit=10&api_key=cC9iSkChkeJbhrptC3O3LGSZai4xg3l8`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n} ","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    console.log( id, title, url );\r\n    return (\r\n        <div className='card animate__animated animate__bounce animate__delay-1s'>\r\n            <img src={ url } alt={ title }/>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {  } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { obtenerGif } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {categoriasArreglo} ) => {\r\n\r\n    // const [imagenes, setimagenes] = useState([]);\r\n    const { data:imagenes, loading } = useFetchGifs(categoriasArreglo);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h4 className='animate__animated animate__bounce animate__delay-2s'>{ categoriasArreglo }</h4>\r\n\r\n            { loading && <p>Cargando gifs</p>}\r\n\r\n\r\n                <div className=\"cardgrid\" >\r\n                    \r\n                \r\n                        {\r\n                            imagenes.map( img => (\r\n                                <GifGridItem \r\n                                    key = {img.id}\r\n                                    {...img}\r\n                                />\r\n                            ))\r\n                        }\r\n                \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { obtenerGif } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( categoriasArreglo ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    useEffect(() =>{\r\n        obtenerGif( categoriasArreglo )\r\n        .then(imgs =>{\r\n\r\n            setTimeout(() => {\r\n\r\n                console.log(imgs);\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                }); \r\n            }, 3000);\r\n\r\n            \r\n            \r\n        }) \r\n\r\n    }, [ categoriasArreglo ])\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategoria } from './componentes/AddCategoria';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n// import addCategoria from './src/componentes';\r\n\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    // const categorias = ['One Punch Man', 'Shingeki no kyojin', 'Naruto'];\r\n    const [categorias, setCategorias] = useState(['']);\r\n\r\n    // const AgregarCategoria = () =>{\r\n    //     setCategorias([...categorias, 'HunterXHunter']);//Operador ... para anadir a un arreglo constante\r\n    // }\r\n\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategoria setCategorias={ setCategorias } />\r\n            <hr/>\r\n\r\n            {/* <button onClick={ AgregarCategoria }>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( categoriasArreglo => {\r\n                        // return <li key={ categoriasArreglo }> { categoriasArreglo }</li>\r\n                       return  <GifGrid \r\n                                    key = {categoriasArreglo}\r\n                                    categoriasArreglo = {categoriasArreglo} \r\n                               />\r\n                    })\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n        \r\n        \r\n        \r\n    )\r\n\r\n}\r\n\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n\n);\n"],"sourceRoot":""}